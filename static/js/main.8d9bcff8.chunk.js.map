{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","concat","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_jsxs","className","type","onClick","sort","firstGood","secondGood","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAM,GAADC,OAAKH,EAAKE,QAAUJ,SAEjCE,EAAKI,MAJDJ,EAAKK,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAsB,IAAGC,EAAAC,YAAAH,EAAA,GAA5ChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAQtB,OACEG,eAAA,OAAKC,UAAU,MAAKpB,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEsB,KAAK,SACL,UAAQ,aACRC,QAbU,WAAH,OAASd,IAASE,KAAKQ,IAablB,SAClB,mBAIDD,cAAA,UACEsB,KAAK,SACL,UAAQ,oBACRC,QAnBgB,WAAH,ODDZd,IACJE,MAAK,SAAAZ,GACJ,OAAOA,EAAMyB,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUlB,KAAKoB,cAAcD,EAAWnB,SAC9CqB,MAAM,EAAG,MCHwBjB,KAAKQ,IAmBhBlB,SACxB,uBAIDD,cAAA,UACEsB,KAAK,SACL,UAAQ,aACRC,QAzBc,WAAH,ODMVd,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAM8B,QAAO,SAAA1B,GAAI,MAAmB,QAAfA,EAAKE,YCPHM,KAAKQ,IAyBlBlB,SACtB,mBAIDD,cAACH,EAAS,CAACE,MAAOA,QCzCxB+B,IAASC,OACP/B,cAACc,EAAG,IACJkB,SAASC,eAAe,U","file":"static/js/main.8d9bcff8.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods.sort((firstGood, secondGood) => {\n        return firstGood.name.localeCompare(secondGood.name);\n      }).slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | []>([]);\n\n  const loadAll = () => getAll().then(setGoods);\n\n  const loadFirstFive = () => get5First().then(setGoods);\n\n  const loadOnlyRed = () => getRedGoods().then(setGoods);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={loadAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={loadFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={loadOnlyRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}